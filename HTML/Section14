transform-origin属性用于设置应用CSS变换点。 
例如，当执行 rotate时（你将在本项目的后面进行），transform-origin决定了元素围绕哪一点旋转。

给 .line 选择器一个 0% 0% 的 transform-origin 属性。 这将使原点从左边偏移 0%，从上面偏移 0%，把它设置在元素的左上角。
.line {
  background-color: black;
  width: 50%;
  height: 2px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: 0% 0%;
}

@keyframes at-rule 用于定义 CSS 动画的流程。 
在 @keyframes 规则中，你可以为动画序列中的特定点创建选择器，例如 0% 或 25%，或者使用 from 和 to 来定义序列的开始和结束。

需要为 @keyframes 规则分配一个名称，你可以在其他规则中使用该名称来引用它们。 例如，@keyframes freeCodeCamp { } 规则将被命名为 freeCodeCamp。
创建一个名为 wheel 的 @keyframes 规则。
@keyframes wheel {
   0% {
     transform: rotate(0deg);
   }
   100% {
     transform: rotate(360deg);
   }
}

animation-name 属性用于将 @keyframes 规则链接到 CSS 选择器。 此属性的值应与 @keyframes 规则的名称匹配。 给你的 .wheel 选择器一个 animation-name 属性值为 wheel。
animation-duration 属性用于设置动画应该在多长时间内完成。 时间应以秒（s）或毫秒（ms）为单位指定。
.wheel {
  border: 2px solid black;
  border-radius: 50%;
  margin-left: 50px;
  position: absolute;
  height: 55vw;
  width: 55vw;
  max-width: 500px;
  max-height: 500px;
  animation-name: wheel;
  animation-duration: 10s;
}

将 .cabin 规则的 animation 属性设置为 cabins 10s linear infinite。 
这将按顺序设置 animation-name、animation-duration、animation-timing-function 和 animation-iteration-count 属性。
