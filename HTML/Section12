将 overflow 属性设置为 hidden 以隐藏任何超出视口时出现的滚动条；

变量声明以两个破折号 (-) 开头，并被赋予名称和值，例如：--variable-name: value;。
--building-color1: #999; //声明
background-color: var(--building-color1); //使用
var(--variable-name, fallback-value) 当变量出现问题时，该属性将使用备用值。

使元素的底部均匀地排布建筑物。
display: flex;
align-items: flex-end;
justify-content: space-evenly;

变量通常在 :root 选择器中声明。 这是 CSS 中最高级别的选择器；放在里面的变量将在任何地方都可用。 将 :root 选择器添加到样式表的顶部，并将所有变量声明移到那里。

CSS 中的渐变是一种跨元素距离在颜色之间过渡的方法。 它们应用于 background 属性，语法如下所示：
gradient-type(
  direction, //可省略
  color1,
  color2,
  ...
  conorN
);
在示例中，color1 在顶部是实心的，color2 在底部是实心的，并且在它们之间均匀地从一个过渡到下一个。 
在 .bb1a 中，在 background-color 属性下添加 background 属性。 将其设置为 linear-gradient 类型的梯度，使用 --building-color1 作为其第一种颜色，使用 --window-color1 作为第二种颜色。
.bb1a {
  width: 70%;
  height: 10%;
  background-color: var(--building-color1);
  background: linear-gradient(
      var(--building-color1),
      var(--window-color1)
    );
}

.bb1d {
  width: 100%;
  height: 70%;
  background: linear-gradient(
      var(--building-color1) 50%,
      var(--window-color1)
    );
}

渐变过渡通常会逐渐从一种颜色变为另一种颜色。 你可以将更改设为实线，如下所示：
linear-gradient(
  var(--first-color) 0%,
  var(--first-color) 40%,
  var(--second-color) 40%,
  var(--second-color) 80%
);

将 repeating-linear-gradient 添加到 .fb1c 已有的渐变下方，从 0% 到 10% 处为 --building-color4，从 10% 到 90% 处为 --window-color4。 这将在你之前添加的渐变后面。
.fb1c {
  width: 100%;
  height: 80%;
  background: repeating-linear-gradient(
      90deg,
      var(--building-color4),
      var(--building-color4) 10%,
      transparent 10%,
      transparent 15%
    ),
    repeating-linear-gradient(
      var(--building-color4),
      var(--building-color4) 10%,
      var(--window-color4) 10%,
      var(--window-color4) 90%
    );
}

媒体查询可用于根据特定条件更改样式，代码就像这样：
@media (condition) {

}  
在样式表底部添加一个空的媒体查询，条件为 max-width: 1000px。 此处添加的样式将在文档的宽度等于或小于 1000px 时生效。
@media (max-width: 1000px) {
  .sky {
    background: radial-gradient(
        closest-corner circle at 15% 15%,
        #ccc,
        #ccc 20%,
        #445 21%,
        #223 100%
      );
  }
}
